name: Run Jupyter Notebook

on:
  schedule:
    - cron: '0 8 * * 1' # Runs every hour
  workflow_dispatch: # Allows manual triggering

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.9' # Or your desired Python version

      - name: Install dependencies
        run: pip install -r.github/workflows/requirements.txt

      - name: Authenticate with Google
        env:
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          GOOGLE_REFRESH_TOKEN: ${{ secrets.GOOGLE_REFRESH_TOKEN }}
        run: |
          python -c "
          from google.oauth2.credentials import Credentials
          from google.auth.transport.requests import Request
          import os
          import json
      
          # Authenticate using GitHub secrets
          credentials = Credentials(
              token=None,
              client_id=os.environ['GOOGLE_CLIENT_ID'],
              client_secret=os.environ['GOOGLE_CLIENT_SECRET'],
              refresh_token=os.environ['GOOGLE_REFRESH_TOKEN'],
              token_uri='https://oauth2.googleapis.com/token'
          )
      
          # Refresh the credentials if necessary
          if credentials.expired and credentials.refresh_token:
              credentials.refresh(Request())
      
          # Function to convert credentials to dictionary for saving
          def credentials_to_dict(credentials):
              return {
                  'token': credentials.token,
                  'refresh_token': credentials.refresh_token,
                  'token_uri': credentials.token_uri,
                  'client_id': credentials.client_id,
                  'client_secret': credentials.client_secret,
                  'scopes': credentials.scopes,
              }
      
          # Save credentials to a file
          credentials_file = '/tmp/credentials.json'
          with open(credentials_file, 'w') as f:
              json.dump(credentials_to_dict(credentials), f)
      
          print(f'Credentials saved to {credentials_file}')
          "
      - name: Run Jupyter notebook
        run: |
          # Install jupyter if not installed
          pip install jupyter
          
          # Run your notebook
          jupyter nbconvert --to notebook --execute team/Shazeb/Holdout_group/test_automation.ipynb
